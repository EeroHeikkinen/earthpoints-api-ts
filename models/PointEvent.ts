/* tslint:disable */
/* eslint-disable */
/**
 * Earthpoints API
 * Earthpoints API description
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PointEvent
 */
export interface PointEvent {
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    hash: string;
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    userid: string;
    /**
     * 
     * @type {boolean}
     * @memberof PointEvent
     */
    isBurn: boolean;
    /**
     * 
     * @type {number}
     * @memberof PointEvent
     */
    points: number;
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    verb: string;
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    platform: string;
    /**
     * 
     * @type {string}
     * @memberof PointEvent
     */
    icon: string;
    /**
     * 
     * @type {Date}
     * @memberof PointEvent
     */
    timestamp: Date;
    /**
     * 
     * @type {object}
     * @memberof PointEvent
     */
    metadata: object;
}

export function PointEventFromJSON(json: any): PointEvent {
    return PointEventFromJSONTyped(json, false);
}

export function PointEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'userid': json['userid'],
        'isBurn': json['isBurn'],
        'points': json['points'],
        'message': json['message'],
        'verb': json['verb'],
        'platform': json['platform'],
        'icon': json['icon'],
        'timestamp': (new Date(json['timestamp'])),
        'metadata': json['metadata'],
    };
}

export function PointEventToJSON(value?: PointEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'userid': value.userid,
        'isBurn': value.isBurn,
        'points': value.points,
        'message': value.message,
        'verb': value.verb,
        'platform': value.platform,
        'icon': value.icon,
        'timestamp': (value.timestamp.toISOString()),
        'metadata': value.metadata,
    };
}

